{"version":3,"file":"main.js","sources":["../../src/js/helpers/postDate.js","../../src/js/helpers/smooth-scroll.js","../../src/js/main.js"],"sourcesContent":["if (document.body.classList.contains('ev-date')) {\n    // Якщо потрібен вивід дати та час + хвилин, тоді до спана з датою додаємо клас \"time\" <span class=\"date-1 time\"></span>.\n    // Працює як в порядку спадання, так і в порядку зростання.\n    document.addEventListener(\"DOMContentLoaded\", postDate);\n\n    function postDate() {\n        const msInDay = 86400000,\n            counterLength = 366,\n            countryName = 'ru', // Встановлюємо мову для місяців.\n            isAbbreviated = false, // Якщо потрібно скорочений варіант місяців з трьох букв, наприклад \"янв\", \"июн\" і т.д, тоді ставим TRUE.\n            localDate = new Date();\n\n        let months;\n\n        switch (countryName) {\n            case 'lv': // Latvia латышский\n                months = ['Janvāris', 'Februāris', 'Marts', 'Aprīlis', 'Maijs', 'Jūnijs', 'Jūlijs', 'Augusts', 'Septembris', 'Oktobris', 'Novembris', 'Decembris'];\n                break;\n            case 'lt': // Litva литовский\n                months = ['Sausis', 'Vasaris', 'Kovas', 'Balandis', 'Gegužės', 'Birželis', 'Liepa', 'Rugpjūtis', 'Rugsėjis', 'Spalis', 'Lapkritis', 'Gruodis'];\n                break;\n            case 'it': // Italy\n                months = ['Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'];\n                break;\n            case 'es': // Spain\n                months = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\n                break;\n            case 'fr': // France\n                months = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];\n                break;\n            case 'pt': // Portugal\n                months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n                break;\n            case 'de': // Germany\n                months = ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'];\n                break;\n            case 'bg': // Bulgaria\n                months = ['Януари', 'Февруари', 'Март', 'Април', 'Май', 'Юни', 'Юли', 'Август', 'Септември', 'Октомври', 'Ноември', 'Декември'];\n                break;\n            case 'pl': // Poland\n                months = ['Stycznia', 'Lutego', 'Marca', 'Kwietnia', 'Maja', 'Czerwca', 'Lipca', 'Sierpnia', 'Września', 'Października', 'Listopada', 'Grudnia'];\n                break;\n            case 'ro': // Romania\n                months = ['Ianuarie', 'Februarie', 'Martie', 'Aprilie', 'Mai', 'Iunie', 'Iulie', 'August', 'Septembrie', 'Octombrie', 'Noiembrie', 'Decembrie'];\n                break;\n            case 'id': // Indonesia\n                months = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'Nopember', 'Desember'];\n                break;\n            case 'hu': // Hungary (Румунія)\n                months = ['Január', 'Február', 'Március', 'Április', 'Május', 'Június', 'Július', 'Augusztus', 'Szeptember', 'Október', 'November', 'December'];\n                break;\n            case 'gr': // Greece\n            case 'cy': // Cyprus (Кіпр)\n                months = ['Ιανουάριος', 'Φεβρουάριος', 'Μάρτιος', 'Απρίλιος', 'Μάιος', 'Ιούνιος', 'Ιούλιος', 'Αύγουστος', 'Σεπτέμβριος', 'Οκτώβριος', 'Νοέμβριος', 'Δεκέμβριος'];\n                break;\n            case 'ar': // Арабский\n                months = ['يناير', 'فبراير', 'مسيرة', 'أبريل', 'قد', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];\n                break;\n            case 'th': // Тайский\n                months = ['มกราคม', 'กุมภาพันธ์', 'มีนาคม', 'เมษายน', 'พฤษภาคม', 'มิถุนายน', 'กรกฎาคม', 'สิงหาคม', 'กันยายน', 'ตุลาคม', 'พฤศจิกายน', 'ธันวาคม'];\n                break;\n            case 'ru': // Русский\n                months = ['Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', 'Июля', 'Августа', 'Сентября', 'Октября', 'Ноября', 'Декабря'];\n                break;\n            case 'ua': // Українська\n                months = ['Січня', 'Лютого', 'Березня', 'Квітня', 'Травня', 'Червня', 'Липня', 'Серпня', 'Вересня', 'Жовтня', 'Листопада', 'Грудня'];\n                break;\n            case 'en': // Английский\n                months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n                break;\n            case 'ge': // Грузинский\n                months = ['იანვარი', 'თებერვალი', 'მარტი', 'აპრილი', 'მაისი', 'ივნისი', 'ივლისი', 'აგვისტო', 'სექტემბერი', 'ოქტომბერი', 'ნოემბერი', 'დეკემბერი'];\n                break;\n            case 'kz': // Казахский\n                months = ['Қаңтар', 'Ақпан', 'Марш', 'Сәуір', 'Мүмкін', 'Маусым', 'Шілде', 'Тамыз', 'Қыркүйек', 'Қазан', 'Қараша', 'Желтоқсан'];\n                break;\n            case 'sk': // Словацкий\n                months = ['január', 'február', 'marec', 'apríl', 'máj', 'júna', 'júl', 'august', 'septembra', 'október', 'november', 'december'];\n                break;\n            case 'cz': // Czech\n                months = ['Leden', 'Únor', 'Březen', 'Duben', 'Květen', 'Červen', 'Červenec', 'Srpen', 'Září', 'Říjen', 'Listopad', 'Prosinec'];\n                break;\n            case 'hr': // Хорватский\n                months = ['siječanj', 'veljača', 'ožujak', 'travanj', 'svibanj', 'lipanj', 'srpanj', 'kolovoz', 'rujan', 'listopad', 'studeni', 'prosinac'];\n                break;\n            case 'sl': // Словенский\n                months = ['Januarja', 'Februarja', 'Marca', 'Aprila', 'Maja', 'Junija', 'Julija', 'Avgusta', 'Septembra', 'Oktobra', 'Novembra', 'Decembra'];\n                break;\n            case 'nl': // Нидерландский\n                months = ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december'];\n                break;\n            case 'vi': // Вьетнамский\n                months = ['tháng một', 'tháng hai', 'diễu hành', 'tháng tư', 'có thể', 'tháng sáu', 'tháng bảy', 'tháng tám', 'tháng chín', 'tháng mười', 'tháng mười một', 'Tháng 12'];\n                break;\n            case 'my': // Малайский\n                months = ['Januari', 'Februari', 'Mac', 'April', 'Mei', 'Jun', 'Julai', 'Ogos', 'September', 'Oktober', 'November', 'Disember'];\n                break;\n            case 'mm': // Бирманский\n                months = ['ဇန်နဝါရီ', 'ဖေဖော်ဝါရီလ', 'ချီတက်', '.ပြီလ', 'မေ', 'ဇွန်', 'ဇူလိုင်', 'သြဂုတ်', 'စက်တင်ဘာ', 'အောက်တိုဘာ', 'နိုဝင်ဘာ', 'ဒီဇင်ဘာ'];\n                break;\n            case 'in': // Хинди (Индия)\n                months = ['जनवरी', 'फरवरी', 'मार्च', 'अप्रैल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितंबर', 'अक्टूबर', 'नवंबर', 'दिसंबर'];\n                break;\n            case 'tw': // Китайский (Тайвань)\n                months = ['一月', '二月', '行軍', '四月', '可能', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'];\n                break;\n            case 'bd': // Бенгальский (Бангладеш)\n                months = ['জানুয়ারী', 'ফেব্রুয়ারি', 'এপ্রিল', 'মে', 'জুন', 'জুলাই', 'অগাস্ট', 'অগাস্ট', 'সেপ্টেম্বর', 'অক্টোবর', 'নভেম্বর', 'ডিসেম্বর'];\n                break;\n        }\n\n        if (isAbbreviated) {\n            for (let i = 0; i < months.length; i++) months[i] = months[i].slice(0, 3).toLowerCase(); // Прибираємо \".toLowerCase()\", якщо перша буква повинна бути великою.\n        }\n\n        for (let counter = 0; counter < counterLength; counter++) {\n            const dateClass = \"date-\" + counter,\n                nodeList = document.getElementsByClassName(dateClass),\n                date = new Date(localDate.getTime() - counter * msInDay);\n\n            let timeCounter = 0,\n                timeArray = time(nodeList /*, true*/); // Розкоментувати, якщо необхідне сортування в порядку спадання.\n\n            timeArray = timeFormat(timeArray);\n\n            for (let i = 0; i < nodeList.length; i++) {\n                const data = nodeList[i].dataset;\n\n                data.format\n                    ? nodeList[i].innerHTML = format(date, data.format)\n                    // format: особливий формать для окремої дати. Додаєм як data-format=\"фомарт\". Формати дивитись в switch'і нижче. dd - цифри, day - прописом.\n                    // <span class=\"date-1\" data-format=\"dd month yyyy\"></span> - мотає на 1 день назад і виводить цей span у вигляді \"24 Липня 1995\".\n                    : nodeList[i].innerHTML = format(date /*, \"dd month yyyy\"*/); // Default: dd.mm.yyyy ADD FORMAT HEREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\n\n                if (/\\btime\\b/.test(nodeList[i].className)) {\n                    nodeList[i].innerHTML += \" \" + timeArray[timeCounter]; // Рядок для формату виводу часу.\n                    timeCounter++;\n                }\n            }\n        }\n\n        // <span clas=\"date-NUMBER\"></span> - мотає час назад на NUMBER днів. Наприклад, <span className=\"date-5\"></span>\n        // <span clas=\"dateNUMBER\"></span> - мотає час вперед на NUMBER днів. Наприклад, <span className=\"date5\"></span>\n\n        for (let counter = 0; counter < counterLength; counter++) {\n            const dateClass = \"date-\" + counter,\n                  nodeList = document.getElementsByClassName(dateClass),\n                  date = new Date(localDate.getTime() - counter * msInDay);\n\n            let timeArray = time(nodeList /*, true*/); // Розкоментувати, якщо необхідне сортування в порядку спадання.\n            timeArray = timeFormat(timeArray);\n\n            for (let i = 0; i < nodeList.length; i++) {\n                const data = nodeList[i].dataset;\n\n                data.format\n                    ? nodeList[i].innerHTML = format(date, data.format)\n                // format: особливий формать для окремої дати. Додаєм як data-format=\"фомарт\". Формати дивитись в switch'і нижче. dd - цифри, day - прописом.\n                // <span class=\"date-1\" data-format=\"dd month yyyy\"></span> - мотає на 1 день назад і виводить цей span у вигляді \"24 Липня 1995\".\n                    : nodeList[i].innerHTML = format(date /*, \"dd month yyyy\"*/); // Default: dd.mm.yyyy ADD FORMAT HEREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\n            }\n        }\n\n\n        function time(nodeList, reverse) {\n            const timeArray = [];\n\n            for (let i = 0; i < nodeList.length; i++)\n                nodeList[i].className.match(/\\btime\\b/)\n                    ? timeArray.push(timeRandom())\n                    : false;\n\n            if (reverse) timeArray.sort(function (a, b) {\n                return b - a;\n            });\n            else timeArray.sort(function (a, b) {\n                return a - b;\n            });\n\n            return timeArray;\n        }\n\n        function timeRandom() {\n            return Math.round(Math.random() * 1440);\n        }\n\n        function timeFormat(timeArray) {\n            const array = [];\n\n            for (let i = 0; i < timeArray.length; i++) {\n                const hTemp = Math.floor(timeArray[i] / 60),\n                      mTemp = timeArray[i] % 60,\n                      hours = hTemp < 10 ? \"0\" + hTemp : hTemp,\n                      minutes = mTemp < 10 ? \"0\" + mTemp : mTemp;\n                array.push(hours + \":\" + minutes)\n            }\n            return array;\n        }\n\n        function format(date, formatString) {\n            let innerDate = \"\";\n\n            const day = date.getDate(),\n                year = date.getFullYear(),\n                month = date.getMonth() + 1,\n                fo = formatString || true;\n\n            switch (fo) {\n                case \"yyyy\":\n                    innerDate += \"\" + year;\n                    return innerDate;\n\n                case \"yyyy-1\":\n                    innerDate += \"\" + year - 1;\n                    return innerDate;\n\n                case \"yyyy-2\":\n                    innerDate += \"\" + year - 2;\n                    return innerDate;\n\n                case \"mm.dd.yyyy\":\n                    innerDate += (month < 10) ? (\"0\" + month) : month;\n                    innerDate += \".\";\n                    innerDate += (day < 10) ? (\"0\" + day) : day;\n                    innerDate += \".\" + year;\n                    return innerDate;\n\n                case \"month\":\n                    innerDate += months[month - 1].toLowerCase();\n                    return innerDate;\n\n                case \"dd\":\n                    innerDate += (day < 10) ? (\"0\" + day) : day;\n                    return innerDate;\n\n                case \"dd month\":\n                    innerDate += (day < 10) ? (\"0\" + day) : day;\n                    innerDate += \" \";\n                    innerDate += months[month - 1].toLowerCase();\n                    return innerDate;\n\n                case \"dd month yyyy\":\n                    innerDate += (day < 10) ? (\"0\" + day) : day;\n                    innerDate += \" \";\n                    innerDate += months[month - 1].toLowerCase();\n                    innerDate += \" \" + year;\n                    return innerDate;\n\n                case \"day dd, month yyyy\":\n                    const days = [\"Воскресенье\", \"Понедельник\", \"Вторник\", \"Среда\", \"Четверг\", \"Пятница\", \"Суббота\"];\n                    innerDate += days[new Date(year, month - 1, day).getDay()];\n                    innerDate += \" \";\n                    innerDate += (day < 10) ? (\"0\" + day) : day;\n                    innerDate += \" \";\n                    innerDate += months[month - 1];\n                    innerDate += \" \" + year;\n                    return innerDate;\n\n                case \"dd/mm/yyyy\":\n                    innerDate += (day < 10) ? (\"0\" + day) : day;\n                    innerDate += \"/\";\n                    innerDate += (month < 10) ? (\"0\" + month) : month;\n                    innerDate += \"/\" + year;\n                    return innerDate;\n\n                case \"dd-mm-yyyy\":\n                    innerDate += (day < 10) ? (\"0\" + day) : day;\n                    innerDate += \"-\";\n                    innerDate += (month < 10) ? (\"0\" + month) : month;\n                    innerDate += \"-\" + year;\n                    return innerDate;\n\n                default:\n                    innerDate += (day < 10) ? (\"0\" + day) : day;\n                    innerDate += \".\";\n                    innerDate += (month < 10) ? (\"0\" + month) : month;\n                    innerDate += \".\" + year;\n                    return innerDate;\n            }\n        }\n    }\n}","export default () => {\n  $(document).on(`click`, `a[href^=\"#\"]`, function (event) {\n    event.preventDefault();\n\n    $(`html, body`).animate({\n        scrollTop: $($.attr(this, `href`)).offset().top\n    }, 500);\n  });\n};\n","import './helpers/postDate';\nimport scrollSmooth from './helpers/smooth-scroll.js';\n\nfunction main() {\n  scrollSmooth();\n}\n\n\nif (document.documentElement.clientWidth < 480) {\n  window.addEventListener('scroll',\n    function () {\n      return setTimeout(main, 1000);\n    }, {\n      once: true\n    });\n} else {\n  main();\n};\n"],"names":["document","body","classList","contains","postDate","msInDay","counterLength","countryName","localDate","Date","months","counter","dateClass","nodeList","getElementsByClassName","date","getTime","timeCounter","timeArray","time","timeFormat","i","length","data","dataset","format","innerHTML","test","className","reverse","match","push","timeRandom","sort","a","b","Math","round","random","array","hTemp","floor","mTemp","hours","minutes","formatString","innerDate","day","getDate","year","getFullYear","month","getMonth","fo","toLowerCase","days","getDay","addEventListener","$","on","event","preventDefault","animate","scrollTop","attr","offset","top","main","scrollSmooth","documentElement","clientWidth","window","setTimeout","once"],"mappings":"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"}