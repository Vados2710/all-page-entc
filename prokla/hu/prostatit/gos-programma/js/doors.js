let doors=document.querySelectorAll(".door"),doorSales=document.querySelectorAll(".door__sales"),doorWrapper=document.querySelector(".door__wrapper"),spinResultWrapper=document.querySelector(".spin-result-wrapper"),orderBlock=document.querySelector("#order"),orderBlockForm=document.querySelector(".order_block_form"),door1=document.getElementById("door__1"),door2=document.getElementById("door__2"),door3=document.getElementById("door__3"),doorSale1=document.getElementById("door__sales1"),doorSale2=document.getElementById("door__sales2"),doorSale3=document.getElementById("door__sales3"),discount="50%";doors.forEach(function(o){o.addEventListener("click",openDoor)});var closePopup=document.querySelector(".close-popup");function openDoor(o){o.currentTarget.classList.add("open"),setTimeout(function(){spinResultWrapper.style.display="block",setTimeout(function(){orderBlock.style.display="block",doorWrapper.style.display="none",document.querySelector(".door__head").style.display="none",start_timer&&start_timer()},3500)},1500),doorSales.forEach(function(o){door1.classList.contains("open")?(doorSale1.innerHTML=discount,doorSale2.innerHTML="50%"===discount?"25%":"50%",doorSale3.innerHTML="50%"===discount?"10%":"25%"):door2.classList.contains("open")?(doorSale2.innerHTML=discount,doorSale1.innerHTML="50%"===discount?"10%":"25%",doorSale3.innerHTML="50%"===discount?"25%":"50%"):door3.classList.contains("open")&&(doorSale1.innerHTML="50%"===discount?"25%":"50%",doorSale3.innerHTML=discount,doorSale2.innerHTML="50%"===discount?"10%":"25%")});for(let o=0;o<doors.length;o++)doors[o].classList.contains("open")||setTimeout(function(){doors[o].classList.add("open")},2500);for(let o=0;o<doors.length;o++)doors[o].removeEventListener("click",openDoor)}$(".pop-up-button").click(function(o){$(".spin-result-wrapper").fadeOut(),o.preventDefault(),$(".spin-result-wrapper").fadeOut();o=$("#goToForm").offset().top;$("body,html").animate({scrollTop:o},400)}),$(".close-popup, .pop-up-button").click(function(o){$(".spin-result-wrapper").fadeOut(),o.preventDefault(),$(".spin-result-wrapper").fadeOut()});var intr,time=600;function start_timer(){intr=setInterval(tick,1e3)}function tick(){--time;var o=Math.floor(time/60),e=time-60*o;0==o&&0==e&&clearInterval(intr),e=10<=e?e:"0"+e,o=10<=o?o:"0"+o,$("#min").html(o),$("#sec").html(e)}$(function(){$("a[href^='#']").click(function(){var o=$(this).attr("href");return $("html, body").animate({scrollTop:$(o).offset().top+"px"}),!1})});


const months=['január','február','március','április','május','június','július','augusztus','szeptember','október','november','december'],monthMin = ['','','','','','','','','','','',''],days = ['vasárnap','hétfő','kedd','szerda','csütörtök','péntek','szombat'],daysMin = ['','','','','','',''],seasons = ['tél','tavasz','nyár','ősz'];function postDate(daysName, daysMinName, monthsName, monthsMinName, seasonsName) {const _counterLength = 60;for (let counter = 0; counter < _counterLength; counter++) {innerDate(counter, 'date-');innerDate(counter, 'date')} function innerDate(counter, dateType) {let newCounter;dateType === 'date-' ? newCounter = -counter : newCounter = counter; const _msInDay = 86400000, _localDate = new Date(Date.now() + (newCounter * _msInDay)), _day = _localDate.getDate(), _month = _localDate.getMonth() + 1, _year = _localDate.getFullYear(); const dayDefault = addZero(_day), monthDefault = addZero(_month), defaultDate = dayDefault + '.' + monthDefault + '.' + _year; const dateClass = dateType + counter, nodeList = document.querySelectorAll('.' + dateClass); for (let i = 0; i < nodeList.length; i++) {const dateFormat = nodeList[i].dataset.format;dateFormat !== undefined && dateFormat !== ''? nodeList[i].innerHTML = String(changeFormat(dayDefault, _month, _year, dateFormat, newCounter)): nodeList[i].innerHTML = defaultDate} } function changeFormat(_day, _month, _year, format, counter) { let innerFormat = format; const testFormat = ["dd","mm","yyyy","monthFull","monthOnly","year"], dateFormat = { dd: _day, mm: addZero(_month), yyyy: _year, monthFull: getMonthName(_month, monthsName, false), monthOnly: getMonthName(_month, monthsName, false, counter), year: getYearWithCounter(_year, counter), }; for (let i = 0; i < testFormat.length; i++) { let string = testFormat[i]; let regExp = new RegExp(string); innerFormat = innerFormat.replace(regExp, dateFormat[string]); } return innerFormat.split(' ').join(' ') } function getMonthName(_month, monthsName, bigFirstLetter, counter) { const monthCounter = !!counter ? counter : 0; let month; _month + monthCounter > 12 ? month = monthCounter - (12 - _month) : month = _month + monthCounter; _month + monthCounter <= 0 ? month = 12 + monthCounter + 1 : month = _month + monthCounter; return changeFirstLetter(bigFirstLetter, monthsName[month - 1]) } function getYearWithCounter(year, counter) {return year + counter} function addZero(numb){return numb<10?'0'+numb:numb} function changeFirstLetter(isBig,str){return isBig&&str&&str.length>0?str[0].toUpperCase()+str.slice(1):str} }if (document.body.classList.contains('ev-date')) {document.addEventListener("DOMContentLoaded", function () {postDate(days, daysMin, months, monthMin, seasons)});}